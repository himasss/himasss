def add_time(start, duration, wday = "na"):

    #standardizing days of the week  
    startingday = wday.title()
    
    #standardizing times
    stime, apm = start.split(' ')
    shour, smin = map(int,stime.split(':'))
    dhour, dmin = map(int,duration.split(':'))
    nhour = 0
    days_added = ""
    number_of_days_added = 0
    eday = ""

    #convert to 24 hour time:
    if apm == "PM" and shour < 12:
        shour += 12


    #calculating minutes
    nmin = dmin + smin
    if nmin >= 60:
        add_hour = nmin // 60
        nmin = nmin % 60
        nhour += add_hour
    if nmin < 10:
        nmin = "0" + str(nmin)



    #calculating hour if less than 24: 
    if dhour <= 24:
        nhour += (shour + dhour)
        if nhour >= 12:
            nhour = nhour % 12
        if nhour == 0:
            nhour = 12

    #what if over 24 hours:
    if dhour > 24:        
        number_of_days_added = dhour // 24
        nhour = dhour%24 + shour
        if nhour >= 12:
            nhour = nhour % 12
        if nhour == 0:
            nhour = 12
        days_added = f"({number_of_days_added} days later)" if number_of_days_added > 1 else "(next day)"


    elif dhour == 24:
        days_added = "(next day)"

    if wday != "na":
        days_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday']
        sday_index = days_of_week.index(startingday)
        nday_index = ((sday_index + int(number_of_days_added)) % 7)
        eday = days_of_week[nday_index]
    
    #determining am or pm
    if nhour >= 12:
        fapm = "PM"
    else:
        fapm = "AM"
    nhour = nhour % 12
    if nhour == 0:
        nhour = 12

    #prints
    new_time = f"{nhour}:{nmin} {fapm}"
    if wday != "na":
        new_time += f", {eday}"
    if days_added:
        new_time += f" {days_added}"
    print(new_time)


add_time('2:59 AM', '24:00', 'saturDay')
